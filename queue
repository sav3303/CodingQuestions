
// *******************************************************
  
  // Queue = FIFO data structure. First-In First-Out
  //                A collection designed for holding elements prior to processing
  //                Linear data structure
  
  //      enqueue = offer()
  //      dequeue = poll()
  
  // Where are queues useful?
  
  // 1. Keyboard Buffer (letters should appear on the screen in the order they're pressed)
  // 2. Printer Queue (Print jobs should be completed in order)
  // 3. Used in LinkedLists, PriorityQueues, Breadth-first search
  
  // *******************************************************


import java.util.*;

public class Main{
	
    public static void main(String args[])
    {    	
    	//Priority Queue = A FIFO data structure that serves elements
    	//                             with the highest priorities first 
    	//				  before elements with lower priority
    	
    	//Strings in default order
    	Queue<String> queue = new PriorityQueue<>();
    	
    	//Strings in reverse order // we used comparator here --> Collections.reverseOrder()
    	//Queue<String> queue = new PriorityQueue<>(Collections.reverseOrder());
    	
    	queue.offer("B");
    	queue.offer("C");
    	queue.offer("A");
    	queue.offer("F");
    	queue.offer("D");
    	
    	while(!queue.isEmpty()) {
    		System.out.println(queue.poll());
    	}
    }
}
